<?php
/**
 * Author: Nil Portugués Calderó <contact@nilportugues.com>
 * Date: 9/16/14
 * Time: 9:42 PM
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
$base = '\NilPortugues\Validator\Validation';

return [

    //GenericAttribute
    'GenericAttribute::isRequired'                    => $base.'\GenericValidation::isRequired',
    'GenericAttribute::isNotNull'                     => $base.'\GenericValidation::isNotNull',
    //FloatAttribute
    "FloatAttribute::__construct"                     => $base.'\Float\FloatValidation::isFloat',
    "FloatAttribute::isNotZero"                       => $base.'\Float\FloatValidation::isNotZero',
    "FloatAttribute::isPositive"                      => $base.'\Float\FloatValidation::isPositive',
    "FloatAttribute::isPositiveOrZero"                => $base.'\Float\FloatValidation::isPositiveOrZero',
    "FloatAttribute::isNegative"                      => $base.'\Float\FloatValidation::isNegative',
    "FloatAttribute::isNegativeOrZero"                => $base.'\Float\FloatValidation::isNegativeOrZero',
    "FloatAttribute::isBetween"                       => $base.'\Float\FloatValidation::isBetween',
    'FloatAttribute::isOdd'                           => $base.'\Float\FloatValidation::isOdd',
    'FloatAttribute::isEven'                          => $base.'\Float\FloatValidation::isEven',
    'FloatAttribute::isMultiple'                      => $base.'\Float\FloatValidation::isMultiple',
    //IntegerAttribute
    "IntegerAttribute::__construct"                   => $base.'\Integer\IntegerValidation::isInteger',
    "IntegerAttribute::isNotZero"                     => $base.'\Integer\IntegerValidation::isNotZero',
    "IntegerAttribute::isPositive"                    => $base.'\Integer\IntegerValidation::isPositive',
    "IntegerAttribute::isPositiveOrZero"              => $base.'\Integer\IntegerValidation::isPositiveOrZero',
    "IntegerAttribute::isNegative"                    => $base.'\Integer\IntegerValidation::isNegative',
    "IntegerAttribute::isNegativeOrZero"              => $base.'\Integer\IntegerValidation::isNegativeOrZero',
    "IntegerAttribute::isBetween"                     => $base.'\Integer\IntegerValidation::isBetween',
    'IntegerAttribute::isOdd'                         => $base.'\Integer\IntegerValidation::isOdd',
    'IntegerAttribute::isEven'                        => $base.'\Integer\IntegerValidation::isEven',
    'IntegerAttribute::isMultiple'                    => $base.'\Integer\IntegerValidation::isMultiple',
    //StringAttribute
    'StringAttribute::__construct'                    => $base.'\String\StringValidation::isString',
    'StringAttribute::isAlphanumeric'                 => $base.'\String\StringValidation::isAlphanumeric',
    'StringAttribute::isAlpha'                        => $base.'\String\StringValidation::isAlpha',
    'StringAttribute::isBetween'                      => $base.'\String\StringValidation::isBetween',
    'StringAttribute::isCharset'                      => $base.'\String\StringValidation::isCharset',
    'StringAttribute::isAllConsonants'                => $base.'\String\StringValidation::isAllConsonants',
    'StringAttribute::contains'                       => $base.'\String\StringValidation::contains',
    'StringAttribute::isControlCharacters'            => $base.'\String\StringValidation::isControlCharacters',
    'StringAttribute::isDigit'                        => $base.'\String\StringValidation::isDigit',
    'StringAttribute::endsWith'                       => $base.'\String\StringValidation::endsWith',
    'StringAttribute::equals'                         => $base.'\String\StringValidation::equals',
    'StringAttribute::in'                             => $base.'\String\StringValidation::in',
    'StringAttribute::hasGraphicalCharsOnly'          => $base.'\String\StringValidation::hasGraphicalCharsOnly',
    'StringAttribute::hasLength'                      => $base.'\String\StringValidation::hasLength',
    'StringAttribute::isLowercase'                    => $base.'\String\StringValidation::isLowercase',
    'StringAttribute::notEmpty'                       => $base.'\String\StringValidation::notEmpty',
    'StringAttribute::noWhitespace'                   => $base.'\String\StringValidation::noWhitespace',
    'StringAttribute::hasPrintableCharsOnly'          => $base.'\String\StringValidation::hasPrintableCharsOnly',
    'StringAttribute::isPunctuation'                  => $base.'\String\StringValidation::isPunctuation',
    'StringAttribute::matchesRegex'                   => $base.'\String\StringValidation::matchesRegex',
    'StringAttribute::isSlug'                         => $base.'\String\StringValidation::isSlug',
    'StringAttribute::isSpace'                        => $base.'\String\StringValidation::isSpace',
    'StringAttribute::startsWith'                     => $base.'\String\StringValidation::startsWith',
    'StringAttribute::isUppercase'                    => $base.'\String\StringValidation::isUppercase',
    'StringAttribute::isVersion'                      => $base.'\String\StringValidation::isVersion',
    'StringAttribute::isVowel'                        => $base.'\String\StringValidation::isVowel',
    'StringAttribute::isHexDigit'                     => $base.'\String\StringValidation::isHexDigit',
    'StringAttribute::hasLowercase'                   => $base.'\String\StringValidation::hasLowercase',
    'StringAttribute::hasUppercase'                   => $base.'\String\StringValidation::hasUppercase',
    'StringAttribute::hasNumeric'                     => $base.'\String\StringValidation::hasNumeric',
    'StringAttribute::hasSpecialCharacters'           => $base.'\String\StringValidation::hasSpecialCharacters',
    'StringAttribute::isEmail'                        => $base.'\String\StringValidation::isEmail',
    'StringAttribute::isUrl'                          => $base.'\String\StringValidation::isUrl',
    'StringAttribute::isUUID'                         => $base.'\String\StringValidation::isUUID',
    //ObjectAttribute
    'ObjectAttribute::__construct'                    => $base.'\Object\ObjectValidation::isObject',
    'ObjectAttribute::isInstanceOf'                   => $base.'\Object\ObjectValidation::isInstanceOf',
    'ObjectAttribute::hasProperty'                    => $base.'\Object\ObjectValidation::hasProperty',
    'ObjectAttribute::hasMethod'                      => $base.'\Object\ObjectValidation::hasMethod',
    'ObjectAttribute::hasParentClass'                 => $base.'\Object\ObjectValidation::hasParentClass',
    'ObjectAttribute::isChildOf'                      => $base.'\Object\ObjectValidation::isChildOf',
    'ObjectAttribute::inheritsFrom'                   => $base.'\Object\ObjectValidation::inheritsFrom',
    'ObjectAttribute::hasInterface'                   => $base.'\Object\ObjectValidation::hasInterface',
    //DateTimeAttribute
    'DateTimeAttribute::__construct'                  => $base.'\DateTime\DateTimeValidation::isDateTime',
    'DateTimeAttribute::isAfter'                      => $base.'\DateTime\DateTimeValidation::isAfter',
    'DateTimeAttribute::isBefore'                     => $base.'\DateTime\DateTimeValidation::isBefore',
    'DateTimeAttribute::isBetween'                    => $base.'\DateTime\DateTimeValidation::isBetween',
    'DateTimeAttribute::isWeekend'                    => $base.'\DateTime\DateTimeValidation::isWeekend',
    'DateTimeAttribute::isWeekday'                    => $base.'\DateTime\DateTimeValidation::isWeekday',
    'DateTimeAttribute::isMonday'                     => $base.'\DateTime\DateTimeValidation::isMonday',
    'DateTimeAttribute::isTuesday'                    => $base.'\DateTime\DateTimeValidation::isTuesday',
    'DateTimeAttribute::isWednesday'                  => $base.'\DateTime\DateTimeValidation::isWednesday',
    'DateTimeAttribute::isThursday'                   => $base.'\DateTime\DateTimeValidation::isThursday',
    'DateTimeAttribute::isFriday'                     => $base.'\DateTime\DateTimeValidation::isFriday',
    'DateTimeAttribute::isSaturday'                   => $base.'\DateTime\DateTimeValidation::isSaturday',
    'DateTimeAttribute::isSunday'                     => $base.'\DateTime\DateTimeValidation::isSunday',
    'DateTimeAttribute::isToday'                      => $base.'\DateTime\DateTimeValidation::isToday',
    'DateTimeAttribute::isYesterday'                  => $base.'\DateTime\DateTimeValidation::isYesterday',
    'DateTimeAttribute::isTomorrow'                   => $base.'\DateTime\DateTimeValidation::isTomorrow',
    'DateTimeAttribute::isLeapYear'                   => $base.'\DateTime\DateTimeValidation::isLeapYear',
    'DateTimeAttribute::isMorning'                    => $base.'\DateTime\DateTimeValidation::isMorning',
    'DateTimeAttribute::isAftenoon'                   => $base.'\DateTime\DateTimeValidation::isAftenoon',
    'DateTimeAttribute::isEvening'                    => $base.'\DateTime\DateTimeValidation::isEvening',
    'DateTimeAttribute::isNight'                      => $base.'\DateTime\DateTimeValidation::isNight',
    //CollectionAttribute
    'CollectionAttribute::__construct'                => $base.'\Collection\CollectionValidation::isArray',
    'CollectionAttribute::each'                       => $base.'\Collection\CollectionValidation::each',
    'CollectionAttribute::hasKeyFormat'               => $base.'\Collection\CollectionValidation::hasKeyFormat',
    'CollectionAttribute::endsWith'                   => $base.'\Collection\CollectionValidation::endsWith',
    'CollectionAttribute::contains'                   => $base.'\Collection\CollectionValidation::contains',
    'CollectionAttribute::hasKey'                     => $base.'\Collection\CollectionValidation::hasKey',
    'CollectionAttribute::hasLength'                  => $base.'\Collection\CollectionValidation::hasLength',
    'CollectionAttribute::isNotEmpty'                 => $base.'\Collection\CollectionValidation::isNotEmpty',
    'CollectionAttribute::startsWith'                 => $base.'\Collection\CollectionValidation::startsWith',
    //FileUploadAttribute
    'FileUploadAttribute::__construct'                => $base.'\FileUpload\FileUploadValidation::isUploaded',
    'FileUploadAttribute::isBetween'                  => $base.'\FileUpload\FileUploadValidation::isBetween',
    'FileUploadAttribute::isMimeType'                 => $base.'\FileUpload\FileUploadValidation::isMimeType',
    'FileUploadAttribute::hasFileNameFormat'          => $base.'\FileUpload\FileUploadValidation::hasFileNameFormat',
    'FileUploadAttribute::hasValidUploadDirectory'    => $base.'\FileUpload\FileUploadValidation::hasValidUploadDirectory',
    'FileUploadAttribute::notOverwritingExistingFile' => $base.'\FileUpload\FileUploadValidation::notOverwritingExistingFile',
    'FileUploadAttribute::isImage'                    => $base.'\FileUpload\FileUploadValidation::isImage',
    'FileUploadAttribute::hasLength'                  => $base.'\FileUpload\FileUploadValidation::hasLength',
];
