<?php
/**
 * Author: Nil Portugués Calderó <contact@nilportugues.com>
 * Date: 9/16/14
 * Time: 9:42 PM
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
$base = '\NilPortugues\Validator\Traits';

return [

    //GenericAttribute
    'GenericAttribute::isRequired'                    => $base.'\GenericTrait::isRequired',
    'GenericAttribute::isNotNull'                     => $base.'\GenericTrait::isNotNull',
    //FloatAttribute
    "FloatAttribute::__construct"                     => $base.'\Float\FloatTrait::isFloat',
    "FloatAttribute::isNotZero"                       => $base.'\Float\FloatTrait::isNotZero',
    "FloatAttribute::isPositive"                      => $base.'\Float\FloatTrait::isPositive',
    "FloatAttribute::isPositiveOrZero"                => $base.'\Float\FloatTrait::isPositiveOrZero',
    "FloatAttribute::isNegative"                      => $base.'\Float\FloatTrait::isNegative',
    "FloatAttribute::isNegativeOrZero"                => $base.'\Float\FloatTrait::isNegativeOrZero',
    "FloatAttribute::isBetween"                       => $base.'\Float\FloatTrait::isBetween',
    'FloatAttribute::isOdd'                           => $base.'\Float\FloatTrait::isOdd',
    'FloatAttribute::isEven'                          => $base.'\Float\FloatTrait::isEven',
    'FloatAttribute::isMultiple'                      => $base.'\Float\FloatTrait::isMultiple',
    //IntegerAttribute
    "IntegerAttribute::__construct"                   => $base.'\Integer\IntegerTrait::isInteger',
    "IntegerAttribute::isNotZero"                     => $base.'\Integer\IntegerTrait::isNotZero',
    "IntegerAttribute::isPositive"                    => $base.'\Integer\IntegerTrait::isPositive',
    "IntegerAttribute::isPositiveOrZero"              => $base.'\Integer\IntegerTrait::isPositiveOrZero',
    "IntegerAttribute::isNegative"                    => $base.'\Integer\IntegerTrait::isNegative',
    "IntegerAttribute::isNegativeOrZero"              => $base.'\Integer\IntegerTrait::isNegativeOrZero',
    "IntegerAttribute::isBetween"                     => $base.'\Integer\IntegerTrait::isBetween',
    'IntegerAttribute::isOdd'                         => $base.'\Integer\IntegerTrait::isOdd',
    'IntegerAttribute::isEven'                        => $base.'\Integer\IntegerTrait::isEven',
    'IntegerAttribute::isMultiple'                    => $base.'\Integer\IntegerTrait::isMultiple',
    //StringAttribute
    'StringAttribute::__construct'                    => $base.'\String\StringTrait::isString',
    'StringAttribute::isAlphanumeric'                 => $base.'\String\StringTrait::isAlphanumeric',
    'StringAttribute::isAlpha'                        => $base.'\String\StringTrait::isAlpha',
    'StringAttribute::isBetween'                      => $base.'\String\StringTrait::isBetween',
    'StringAttribute::isCharset'                      => $base.'\String\StringTrait::isCharset',
    'StringAttribute::isAllConsonants'                => $base.'\String\StringTrait::isAllConsonants',
    'StringAttribute::contains'                       => $base.'\String\StringTrait::contains',
    'StringAttribute::isControlCharacters'            => $base.'\String\StringTrait::isControlCharacters',
    'StringAttribute::isDigit'                        => $base.'\String\StringTrait::isDigit',
    'StringAttribute::endsWith'                       => $base.'\String\StringTrait::endsWith',
    'StringAttribute::equals'                         => $base.'\String\StringTrait::equals',
    'StringAttribute::in'                             => $base.'\String\StringTrait::in',
    'StringAttribute::hasGraphicalCharsOnly'          => $base.'\String\StringTrait::hasGraphicalCharsOnly',
    'StringAttribute::hasLength'                      => $base.'\String\StringTrait::hasLength',
    'StringAttribute::isLowercase'                    => $base.'\String\StringTrait::isLowercase',
    'StringAttribute::notEmpty'                       => $base.'\String\StringTrait::notEmpty',
    'StringAttribute::noWhitespace'                   => $base.'\String\StringTrait::noWhitespace',
    'StringAttribute::hasPrintableCharsOnly'          => $base.'\String\StringTrait::hasPrintableCharsOnly',
    'StringAttribute::isPunctuation'                  => $base.'\String\StringTrait::isPunctuation',
    'StringAttribute::matchesRegex'                   => $base.'\String\StringTrait::matchesRegex',
    'StringAttribute::isSlug'                         => $base.'\String\StringTrait::isSlug',
    'StringAttribute::isSpace'                        => $base.'\String\StringTrait::isSpace',
    'StringAttribute::startsWith'                     => $base.'\String\StringTrait::startsWith',
    'StringAttribute::isUppercase'                    => $base.'\String\StringTrait::isUppercase',
    'StringAttribute::isVersion'                      => $base.'\String\StringTrait::isVersion',
    'StringAttribute::isVowel'                        => $base.'\String\StringTrait::isVowel',
    'StringAttribute::isHexDigit'                     => $base.'\String\StringTrait::isHexDigit',
    'StringAttribute::hasLowercase'                   => $base.'\String\StringTrait::hasLowercase',
    'StringAttribute::hasUppercase'                   => $base.'\String\StringTrait::hasUppercase',
    'StringAttribute::hasNumeric'                     => $base.'\String\StringTrait::hasNumeric',
    'StringAttribute::hasSpecialCharacters'           => $base.'\String\StringTrait::hasSpecialCharacters',
    'StringAttribute::isEmail'                        => $base.'\String\StringTrait::isEmail',
    'StringAttribute::isUrl'                          => $base.'\String\StringTrait::isUrl',
    'StringAttribute::isUUID'                         => $base.'\String\StringTrait::isUUID',
    //ObjectAttribute
    'ObjectAttribute::__construct'                    => $base.'\Object\ObjectTrait::isObject',
    'ObjectAttribute::isInstanceOf'                   => $base.'\Object\ObjectTrait::isInstanceOf',
    'ObjectAttribute::hasProperty'                    => $base.'\Object\ObjectTrait::hasProperty',
    'ObjectAttribute::hasMethod'                      => $base.'\Object\ObjectTrait::hasMethod',
    'ObjectAttribute::hasParentClass'                 => $base.'\Object\ObjectTrait::hasParentClass',
    'ObjectAttribute::isChildOf'                      => $base.'\Object\ObjectTrait::isChildOf',
    'ObjectAttribute::inheritsFrom'                   => $base.'\Object\ObjectTrait::inheritsFrom',
    'ObjectAttribute::hasInterface'                   => $base.'\Object\ObjectTrait::hasInterface',
    //DateTimeAttribute
    'DateTimeAttribute::__construct'                  => $base.'\DateTime\DateTimeTrait::isDateTime',
    'DateTimeAttribute::isAfter'                      => $base.'\DateTime\DateTimeTrait::isAfter',
    'DateTimeAttribute::isBefore'                     => $base.'\DateTime\DateTimeTrait::isBefore',
    'DateTimeAttribute::isBetween'                    => $base.'\DateTime\DateTimeTrait::isBetween',
    'DateTimeAttribute::isWeekend'                    => $base.'\DateTime\DateTimeTrait::isWeekend',
    'DateTimeAttribute::isWeekday'                    => $base.'\DateTime\DateTimeTrait::isWeekday',
    'DateTimeAttribute::isMonday'                     => $base.'\DateTime\DateTimeTrait::isMonday',
    'DateTimeAttribute::isTuesday'                    => $base.'\DateTime\DateTimeTrait::isTuesday',
    'DateTimeAttribute::isWednesday'                  => $base.'\DateTime\DateTimeTrait::isWednesday',
    'DateTimeAttribute::isThursday'                   => $base.'\DateTime\DateTimeTrait::isThursday',
    'DateTimeAttribute::isFriday'                     => $base.'\DateTime\DateTimeTrait::isFriday',
    'DateTimeAttribute::isSaturday'                   => $base.'\DateTime\DateTimeTrait::isSaturday',
    'DateTimeAttribute::isSunday'                     => $base.'\DateTime\DateTimeTrait::isSunday',
    'DateTimeAttribute::isToday'                      => $base.'\DateTime\DateTimeTrait::isToday',
    'DateTimeAttribute::isYesterday'                  => $base.'\DateTime\DateTimeTrait::isYesterday',
    'DateTimeAttribute::isTomorrow'                   => $base.'\DateTime\DateTimeTrait::isTomorrow',
    'DateTimeAttribute::isLeapYear'                   => $base.'\DateTime\DateTimeTrait::isLeapYear',
    'DateTimeAttribute::isMorning'                    => $base.'\DateTime\DateTimeTrait::isMorning',
    'DateTimeAttribute::isAftenoon'                   => $base.'\DateTime\DateTimeTrait::isAftenoon',
    'DateTimeAttribute::isEvening'                    => $base.'\DateTime\DateTimeTrait::isEvening',
    'DateTimeAttribute::isNight'                      => $base.'\DateTime\DateTimeTrait::isNight',
    //CollectionAttribute
    'CollectionAttribute::__construct'                => $base.'\Collection\CollectionTrait::isArray',
    'CollectionAttribute::each'                       => $base.'\Collection\CollectionTrait::each',
    'CollectionAttribute::hasKeyFormat'               => $base.'\Collection\CollectionTrait::hasKeyFormat',
    'CollectionAttribute::endsWith'                   => $base.'\Collection\CollectionTrait::endsWith',
    'CollectionAttribute::contains'                   => $base.'\Collection\CollectionTrait::contains',
    'CollectionAttribute::hasKey'                     => $base.'\Collection\CollectionTrait::hasKey',
    'CollectionAttribute::hasLength'                  => $base.'\Collection\CollectionTrait::hasLength',
    'CollectionAttribute::isNotEmpty'                 => $base.'\Collection\CollectionTrait::isNotEmpty',
    'CollectionAttribute::startsWith'                 => $base.'\Collection\CollectionTrait::startsWith',
    //FileUploadAttribute
    'FileUploadAttribute::__construct'                => $base.'\FileUpload\FileUploadTrait::isUploaded',
    'FileUploadAttribute::isBetween'                  => $base.'\FileUpload\FileUploadTrait::isBetween',
    'FileUploadAttribute::isMimeType'                 => $base.'\FileUpload\FileUploadTrait::isMimeType',
    'FileUploadAttribute::hasFileNameFormat'          => $base.'\FileUpload\FileUploadTrait::hasFileNameFormat',
    'FileUploadAttribute::hasValidUploadDirectory'    => $base.'\FileUpload\FileUploadTrait::hasValidUploadDirectory',
    'FileUploadAttribute::notOverwritingExistingFile' => $base.'\FileUpload\FileUploadTrait::notOverwritingExistingFile',
    'FileUploadAttribute::isImage'                    => $base.'\FileUpload\FileUploadTrait::isImage',
    'FileUploadAttribute::hasLength'                  => $base.'\FileUpload\FileUploadTrait::hasLength',
];
